Bootstrap: docker
From: r-base:4.3.0

%post

  # apt
  apt-get update
  apt-get install -y libssl-dev libxml2-dev libcurl4-openssl-dev
  apt-get install -y python3 python3-pip python3-venv python3-dev

  # Setup a Python virtual environment
  python3 -m venv /opt/venv
  # Activate the virtual environment
  . /opt/venv/bin/activate

  # Install Python packages in the virtual environment
  pip install tsfel tsfresh

  # Deactivate the virtual environment
  deactivate

  # Fundamental packages
  R --slave -e 'install.packages("data.table")'
  R --slave -e 'install.packages("R6")'
  R --slave -e 'install.packages("bit64")'
  R --slave -e 'install.packages("lubridate")'
  R --slave -e 'install.packages("remotes")'
  R --slave -e 'install.packages("AzureStor")'
  R --slave -e 'remotes::install_github("MislavSag/finfeatures")'
  R --slave -e 'install.packages("reticulate")'
  # Packages for predictors
  R --slave -e 'install.packages("exuber")'
  R --slave -e 'remotes::install_github("ottosven/backCUSUM")'
  R --slave -e 'remotes::install_github("MislavSag/theftms")'
  R --slave -e 'install.packages("forecast")'
  R --slave -e 'install.packages("tsfeatures")'
  R --slave -e 'install.packages("WaveletArima")'
  R --slave -e 'install.packages("fracdiff")'
  # Packages for filters
  R --slave -e 'install.packages("gausscov")'
  # Packages for models
  R --slave -e 'remotes::install_github("mlr-org/mlr3extralearners")'
  R --slave -e 'remotes::install_github("MislavSag/finautoml")'
  R --slave -e 'install.packages("FSelectorRcpp")'
  R --slave -e 'install.packages("igraph")'
  R --slave -e 'install.packages("mlr3")'
  R --slave -e 'install.packages("mlr3misc")'
  R --slave -e 'install.packages("mlr3pipelines")'
  R --slave -e 'install.packages("mlr3tuning")'
  R --slave -e 'install.packages("mlr3verse")'
  R --slave -e 'install.packages("mlr3viz")'
  R --slave -e 'install.packages("mlr3mbo")'
  R --slave -e 'install.packages("mlr3batchmark")'
  R --slave -e 'install.packages("batchtools")'
  R --slave -e 'install.packages("paradox")'
  R --slave -e 'install.packages("ranger")'
  R --slave -e 'install.packages("bit64")'
  R --slave -e 'install.packages("xgboost")'
  R --slave -e 'install.packages("dbarts")'
  R --slave -e 'install.packages("nnet")'
  R --slave -e 'install.packages("partykit")'
  R --slave -e 'install.packages("sandwich")'
  R --slave -e 'install.packages("coin")'
  R --slave -e 'install.packages("praznik")'
  R --slave -e 'install.packages("FSelectorRcpp")'
  R --slave -e 'install.packages("care")'
  R --slave -e 'install.packages("fastICA")'
  R --slave -e 'install.packages("lightgbm")'
  R --slave -e 'install.packages("earth")'
  R --slave -e 'install.packages("kknn")'
  R --slave -e 'install.packages("kernlab")'
  R --slave -e 'install.packages("gbm")'
  R --slave -e 'install.packages("rsm")'
  R --slave -e 'remotes::install_url("https://github.com/catboost/catboost/releases/download/v1.2.7/catboost-R-linux-aarch64-1.2.7.tgz", INSTALL_opts = c("--no-multiarch", "--no-test-load"))'
  # Torch
  R --slave -e 'install.packages("torch")'
  R --slave -e 'torch::install_torch()'
  R --slave -e 'install.packages("mlr3torch")'
  R --slave -e 'install.packages("tabnet")'

%environment
  # Set environment variables to use the virtual environment's Python
  export PATH="/opt/venv/bin:$PATH"
  export RETICULATE_PYTHON="/opt/venv/bin/python"

%runscript
  # Script to run when the container is executed; passes commands to Rscript
  Rscript $@
